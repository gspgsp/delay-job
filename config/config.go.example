package config

import (
	"log"

	"gopkg.in/ini.v1"
)

// 解析配置文件

var (
	// Setting 配置实例
	Setting *Config
)

const (
    // DefaultBindAddress 监听地址
    DefaultBindAddress = "0.0.0.0:9266"
    // DefaultBucketSize bucket数量
    DefaultBucketSize = 3
    // DefaultBucketName bucket名称
    DefaultBucketName = "dq_bucket_%d"
    // DefaultQueueName 队列名称
    DefaultQueueName = "dq_queue_%s"
    // DefaultQueueBlockTimeout 轮询队列超时时间
    DefaultQueueBlockTimeout = 168
    // DefaultRedisHost Redis连接地址
    DefaultRedisHost = "127.0.0.1:6379"
    // DefaultRedisDb Redis数据库编号
    DefaultRedisDb = 1
    // DefaultRedisPassword Redis密码
    DefaultRedisPassword = ""
    // DefaultRedisMaxIdle Redis连接池闲置连接数
    DefaultRedisMaxIdle = 10
    // DefaultRedisMaxActive Redis连接池最大激活连接数, 0为不限制
    DefaultRedisMaxActive = 0
    // DefaultRedisConnectTimeout Redis连接超时时间,单位毫秒
    DefaultRedisConnectTimeout = 5000
    // DefaultRedisReadTimeout Redis读取超时时间, 单位毫秒
    DefaultRedisReadTimeout = 180000
    // DefaultRedisWriteTimeout Redis写入超时时间, 单位毫秒
    DefaultRedisWriteTimeout = 3000
    //DefaultDbConnect 默认数据库连接方式
    DefaultDbConnect = "mysql"
    //DefaultDbHost 默认数据库主机
    DefaultDbHost = "127.0.0.1"
    //DefaultDbPort 默认数据库端口
    DefaultDbPort = 3306
    //DefaultDbDatabase 默认数据库
    DefaultDbDatabase = ""
    //DefaultDbUserName 默认数据库用户
    DefaultDbUserName = "root"
    //DefaultDbPassword 默认数据库密码
    DefaultDbPassword = "root"
    //DefaultDbPrefix 默认数据库前缀
    DefaultDbPrefix = ""
)

// Config 应用配置
type Config struct {
	BindAddress       string      // http server 监听地址
	BucketSize        int         // bucket数量
	BucketName        string      // bucket在redis中的键名,
	QueueName         string      // ready queue在redis中的键名
	QueueBlockTimeout int         // 调用blpop阻塞超时时间, 单位秒, 修改此项, redis.read_timeout必须做相应调整
	Redis             RedisConfig // redis配置
	Mysql             MySqlConfig // mysql配置
}

// RedisConfig Redis配置
type RedisConfig struct {
	Host           string
	Db             int
	Password       string
	MaxIdle        int // 连接池最大空闲连接数
	MaxActive      int // 连接池最大激活连接数
	ConnectTimeout int // 连接超时, 单位毫秒
	ReadTimeout    int // 读取超时, 单位毫秒
	WriteTimeout   int // 写入超时, 单位毫秒
}

//MySqlConfig Mysql配置
type MySqlConfig struct {
	DbConnect  string
	DbHost     string
	DbPort     int
	DbDatabase string
	DbUserName string
	DbPassword string
	DbPrefix   string
}

// Init 初始化配置
func Init(path string) {
	Setting = &Config{}
	if path == "" {
		Setting.initDefaultConfig()
		return
	}

	Setting.parse(path)
}

// 解析配置文件
func (config *Config) parse(path string) {
	file, err := ini.Load(path)
	if err != nil {
		log.Fatalf("无法解析配置文件#%s", err.Error())
	}

	section := file.Section("")
	config.BindAddress = section.Key("bind_address").MustString(DefaultBindAddress)
	config.BucketSize = section.Key("bucket_size").MustInt(DefaultBucketSize)
	config.BucketName = section.Key("bucket_name").MustString(DefaultBucketName)
	config.QueueName = section.Key("queue_name").MustString(DefaultQueueName)
	config.QueueBlockTimeout = section.Key("queue_block_timeout").MustInt(DefaultQueueBlockTimeout)

	config.Redis.Host = section.Key("redis.host").MustString(DefaultRedisHost)
	config.Redis.Db = section.Key("redis.db").MustInt(DefaultRedisDb)
	config.Redis.Password = section.Key("redis.password").MustString(DefaultRedisPassword)
	config.Redis.MaxIdle = section.Key("redis.max_idle").MustInt(DefaultRedisMaxIdle)
	config.Redis.MaxActive = section.Key("redis.max_active").MustInt(DefaultRedisMaxActive)
	config.Redis.ConnectTimeout = section.Key("redis.connect_timeout").MustInt(DefaultRedisConnectTimeout)
	config.Redis.ReadTimeout = section.Key("redis.read_timeout").MustInt(DefaultRedisReadTimeout)
	config.Redis.WriteTimeout = section.Key("redis.write_timeout").MustInt(DefaultRedisWriteTimeout)

	config.Mysql.DbConnect = section.Key("mysql.connect").MustString(DefaultDbConnect)
	config.Mysql.DbHost = section.Key("mysql.host").MustString(DefaultDbHost)
	config.Mysql.DbPort = section.Key("mysql.port").MustInt(DefaultDbPort)
	config.Mysql.DbDatabase = section.Key("mysql.database").MustString(DefaultDbDatabase)
	config.Mysql.DbUserName = section.Key("mysql.user_name").MustString(DefaultDbUserName)
	config.Mysql.DbPassword = section.Key("mysql.password").MustString(DefaultDbPassword)
	config.Mysql.DbPrefix = section.Key("mysql.prefix").MustString(DefaultDbPrefix)
}

// 初始化默认配置
func (config *Config) initDefaultConfig() {
	config.BindAddress = DefaultBindAddress
	config.BucketSize = DefaultBucketSize
	config.BucketName = DefaultBucketName
	config.QueueName = DefaultQueueName
	config.QueueBlockTimeout = DefaultQueueBlockTimeout

	//redis配置
	config.Redis.Host = DefaultRedisHost
	config.Redis.Db = DefaultRedisDb
	config.Redis.Password = DefaultRedisPassword
	config.Redis.MaxIdle = DefaultRedisMaxIdle
	config.Redis.MaxActive = DefaultRedisMaxActive
	config.Redis.ConnectTimeout = DefaultRedisConnectTimeout
	config.Redis.ReadTimeout = DefaultRedisReadTimeout
	config.Redis.WriteTimeout = DefaultRedisWriteTimeout

	//mysql配置
	config.Mysql.DbConnect = DefaultDbConnect
	config.Mysql.DbHost = DefaultDbHost
	config.Mysql.DbPort = DefaultDbPort
	config.Mysql.DbDatabase = DefaultDbDatabase
	config.Mysql.DbUserName = DefaultDbUserName
	config.Mysql.DbPassword = DefaultDbPassword
	config.Mysql.DbPrefix = DefaultDbPrefix
}
